@use "@multivisio/layout/scss/typography/variables";
@use "@multivisio/layout/scss/system";

@function get-font-size($typo, $variablePrefix: false) {
    @if not map-has-key(variables.$typography, $typo) {
        @error "Invalid typo for typography specified! Choose one of #{map-keys(variables.$typography)}";
    }
    $t: map-get(variables.$typography, $typo);
    @if map-has-key($t, font-size) {
        @if $variablePrefix {
            @return var(
                            --#{system.$variablePrefix}#{$variablePrefix}-typography-#{$typo}-font-size,
                            var(
                                            --#{system.$variablePrefix}typography-#{$typo}-font-size,
                                            map-get($t, font-size)
                            )
            );
        } @else {
            @return var(
                            --#{system.$variablePrefix}area-typography-#{$typo}-font-size,
                            var(
                                            --#{system.$variablePrefix}typography-#{$typo}-font-size,
                                            map-get($t, font-size)
                            )
            );
        }
    }
    @if $variablePrefix {
        @return var(
                        --#{system.$variablePrefix}#{$variablePrefix}-typography-#{$typo}-font-size,
                        var(--#{system.$variablePrefix}typography-#{$typo}-font-size)
        );
    } @else {
        @return var(
                        --#{system.$variablePrefix}area-typography-#{$typo}-font-size,
                        var(--#{system.$variablePrefix}typography-#{$typo}-font-size)
        );
    }
}

@function get-line-height($typo, $variablePrefix: false) {
    @if not map-has-key(variables.$typography, $typo) {
        @error "Invalid typo for typography specified! Choose one of #{map-keys(variables.$typography)}";
    }
    $t: map-get(variables.$typography, $typo);
    @if map-has-key($t, line-height) {
        @if $variablePrefix {
            @return var(
                            --#{system.$variablePrefix}#{$variablePrefix}-typography-#{$typo}-line-height,
                            var(
                                            --#{system.$variablePrefix}typography-#{$typo}-line-height,
                                            map-get($t, line-height)
                            )
            );
        } @else {
            @return var(
                            --#{system.$variablePrefix}area-typography-#{$typo}-line-height,
                            var(
                                            --#{system.$variablePrefix}typography-#{$typo}-line-height,
                                            map-get($t, line-height)
                            )
            );
        }
    }
    @if $variablePrefix {
        @return var(
                        --#{system.$variablePrefix}#{$variablePrefix}-typography-#{$typo}-line-height,
                        var(--#{system.$variablePrefix}typography-#{$typo}-line-height)
        );
    } @else {
        @return var(
                        --#{system.$variablePrefix}area-typography-#{$typo}-line-height,
                        var(--#{system.$variablePrefix}typography-#{$typo}-line-height)
        );
    }
}

@function get-font-weight($typo, $variablePrefix: false) {
    @if not map-has-key(variables.$typography, $typo) {
        @error "Invalid typo for typography specified! Choose one of #{map-keys(variables.$typography)}";
    }
    $t: map-get(variables.$typography, $typo);
    @if map-has-key($t, font-weight) {
        @if $variablePrefix {
            @return var(
                            --#{system.$variablePrefix}#{$variablePrefix}-typography-#{$typo}-font-weight,
                            var(
                                            --#{system.$variablePrefix}typography-#{$typo}-font-weight,
                                            map-get($t, font-weight)
                            )
            );
        } @else {
            @return var(
                            --#{system.$variablePrefix}area-typography-#{$typo}-font-weight,
                            var(
                                            --#{system.$variablePrefix}typography-#{$typo}-font-weight,
                                            map-get($t, font-weight)
                            )
            );
        }
    }
    @if $variablePrefix {
        @return var(
                        --#{system.$variablePrefix}#{$variablePrefix}-typography-#{$typo}-font-weight,
                        var(--#{system.$variablePrefix}typography-#{$typo}-font-weight)
        );
    } @else {
        @return var(
                        --#{system.$variablePrefix}area-typography-#{$typo}-font-weight,
                        var(--#{system.$variablePrefix}typography-#{$typo}-font-weight)
        );
    }
}

@function get-margin-top($typo, $variablePrefix: false) {
    @if not map-has-key(variables.$typography, $typo) {
        @error "Invalid typo for typography specified! Choose one of #{map-keys(variables.$typography)}";
    }
    $t: map-get(variables.$typography, $typo);
    @if map-has-key($t, margin-top) {
        @if $variablePrefix {
            @return var(
                            --#{system.$variablePrefix}#{$variablePrefix}-typography-#{$typo}-margin-top,
                            var(
                                            --#{system.$variablePrefix}typography-#{$typo}-margin-top,
                                            map-get($t, margin-top)
                            )
            );
        } @else {
            @return var(
                            --#{system.$variablePrefix}area-typography-#{$typo}-margin-top,
                            var(
                                            --#{system.$variablePrefix}typography-#{$typo}-margin-top,
                                            map-get($t, margin-top)
                            )
            );
        }
    }
    @if $variablePrefix {
        @return var(
                        --#{system.$variablePrefix}#{$variablePrefix}-typography-#{$typo}-margin-top,
                        var(--#{system.$variablePrefix}typography-#{$typo}-margin-top)
        );
    } @else {
        @return var(
                        --#{system.$variablePrefix}area-typography-#{$typo}-margin-top,
                        var(--#{system.$variablePrefix}typography-#{$typo}-margin-top)
        );
    }
}

@function get-margin-bottom($typo, $variablePrefix: false) {
    @if not map-has-key(variables.$typography, $typo) {
        @error "Invalid typo for typography specified! Choose one of #{map-keys(variables.$typography)}";
    }
    $t: map-get(variables.$typography, $typo);
    @if map-has-key($t, margin-bottom) {
        @if $variablePrefix {
            @return var(
                            --#{system.$variablePrefix}#{$variablePrefix}-typography-#{$typo}-margin-bottom,
                            var(
                                            --#{system.$variablePrefix}typography-#{$typo}-margin-bottom,
                                            map-get($t, margin-bottom)
                            )
            );
        } @else {
            @return var(
                            --#{system.$variablePrefix}area-typography-#{$typo}-margin-bottom,
                            var(
                                            --#{system.$variablePrefix}typography-#{$typo}-margin-bottom,
                                            map-get($t, margin-bottom)
                            )
            );
        }
    }
    @if $variablePrefix {
        @return var(
                        --#{system.$variablePrefix}#{$variablePrefix}-typography-#{$typo}-margin-bottom,
                        var(--#{system.$variablePrefix}typography-#{$typo}-margin-bottom)
        );
    } @else {
        @return var(
                        --#{system.$variablePrefix}area-typography-#{$typo}-margin-bottom,
                        var(--#{system.$variablePrefix}typography-#{$typo}-margin-bottom)
        );
    }
}
